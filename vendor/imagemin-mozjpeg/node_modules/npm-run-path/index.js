"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.npmRunPath = npmRunPath;
exports.npmRunPathEnv = npmRunPathEnv;
require("core-js/modules/web.dom-collections.iterator.js");
require("core-js/modules/web.url.js");
require("core-js/modules/web.url-search-params.js");
var _nodeProcess = _interopRequireDefault(require("node:process"));
var _nodePath = _interopRequireDefault(require("node:path"));
var _nodeUrl = _interopRequireDefault(require("node:url"));
var _index = _interopRequireDefault(require("../path-key/index.js"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function npmRunPath() {
  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  const {
    cwd = _nodeProcess.default.cwd(),
    path: path_ = _nodeProcess.default.env[(0, _index.default)()],
    execPath = _nodeProcess.default.execPath
  } = options;
  let previous;
  const execPathString = execPath instanceof URL ? _nodeUrl.default.fileURLToPath(execPath) : execPath;
  const cwdString = cwd instanceof URL ? _nodeUrl.default.fileURLToPath(cwd) : cwd;
  let cwdPath = _nodePath.default.resolve(cwdString);
  const result = [];
  while (previous !== cwdPath) {
    result.push(_nodePath.default.join(cwdPath, 'node_modules/.bin'));
    previous = cwdPath;
    cwdPath = _nodePath.default.resolve(cwdPath, '..');
  }

  // Ensure the running `node` binary is used.
  result.push(_nodePath.default.resolve(cwdString, execPathString, '..'));
  return [...result, path_].join(_nodePath.default.delimiter);
}
function npmRunPathEnv() {
  let {
    env = _nodeProcess.default.env,
    ...options
  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  env = {
    ...env
  };
  const path = (0, _index.default)({
    env
  });
  options.path = env[path];
  env[path] = npmRunPath(options);
  return env;
}